SE_A_ne = integer(0),
SE_B_given_A_ne = integer(0),
SE_A_int_B_ne = integer(0),
SE_B_ne = integer(0),
SE_A_given_B_ne = integer(0),
SE_B_given_not_A_ne = integer(0),
SP_A_e = integer(0),
SP_B_e = integer(0),
SP_A_ne = integer(0),
SP_B_ne = integer(0))
for (h in prop_exp_list) {
for (w in pi_ne_list) {
for (t in risk_list) {
for (k in SE_exposed_list) {
for (z in sample_size_list)
start.time <- Sys.time()
combination <- c(combination, paste0(h, "_", w, "_", t, "_", k))
### setting parameters
source(paste0(thisdir,"/01_Parameters/TestParameters_hwtk.R"))
### Loading data
source(paste0(thisdir,"/03_DataGen/ConditionalProbability.R"))
### Test
source(paste0(thisdir,"/04_TestApplication/TestPower.R"))
tmp <- data.table(prop_exp = h,
prev_ne = w,
risk = t,
SE_exp = k,
power = rej_95,
sample_size = z,
SE_AUB = SE_AUB,
SE_A_e = SE_A_e,
SE_B_given_A_e  = SE_B_given_A_e,
SE_A_int_B_e = SE_A_int_B_e,
SE_B_e = SE_B_e,
SE_A_given_B_e = SE_A_given_B_e ,
SE_B_given_not_A_e = SE_B_given_not_A_e,
SE_A_ne = SE_A_ne,
SE_B_given_A_ne = SE_B_given_A_ne,
SE_A_int_B_ne = SE_A_int_B_ne,
SE_B_ne = SE_B_ne,
SE_A_given_B_ne = SE_A_given_B_ne,
SE_B_given_not_A_ne = SE_B_given_not_A_ne,
SP_A_e = SP_A_e,
SP_B_e = SP_B_e,
SP_A_ne = SP_A_ne,
SP_B_ne = SP_B_ne)
DT_comb <- rbind(DT_comb, tmp)
TestPower <- c(TestPower, rej_95)
end.time <- Sys.time()
time.taken <- c(time.taken, (end.time - start.time))
counter <- counter + 1
print(paste0(counter, "/" , len))
}
}
}
}
View(DT_comb)
pi_ne/2
SP_B_e           <- max( 1-(pi_ne*risk), (1-pi_ne)) - pi_ne/2
### validation indices: E=1 & Y=0
SP_A_e           <- max( 1-(pi_ne*risk), (1-pi_ne))
SP_B_e           <- max( 1-(pi_ne*risk), (1-pi_ne)) - pi_ne/2
### validation indices: E=0 & Y=0
SP_A_ne          <- max( 1-(pi_ne*risk), (1-pi_ne))
SP_B_ne          <- max( 1-(pi_ne*risk), (1-pi_ne)) - pi_ne/2
SP_A_e
SP_B_e
SP_A_ne
SP_B_ne
rm(list=ls(all.names=TRUE))
### Setting the working directory
if (!require("rstudioapi")) install.packages("rstudioapi")
thisdir<-setwd(dirname(rstudioapi::getSourceEditorContext()$path))
thisdir<-setwd(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(thisdir)
### Loading parameters
source(paste0(thisdir,"/01_Parameters/ProgramParameters.R"))
### Loading test statistic
source(paste0(thisdir,"/02_TestStatistic/TestStatistic.R"))
################################################################################
###################                Simulation                ###################
################################################################################
prop_exp_list    <- c(0.01, 0.1)
pi_ne_list       <- c(0.01, 0.05, 0.1)
risk_list        <- c(0.5, 0.9, 1.1, 2)
SE_exposed_list  <- c(0.15, 0.30, 0.40, 0.50, 0.60, 0.70, 0.85)
sample_size_list <- c(250, 500)
counter <- 0
len <- length(prop_exp_list)*
length(pi_ne_list)*
length(risk_list)*
length(SE_exposed_list)*
length(sample_size_list)
TestPower <- c()
combination <- c()
time.taken <- c()
DT_comb <- data.table(prop_exp = integer(0),
prev_ne = integer(0),
risk = integer(0),
SE_exp = integer(0),
power = integer(0),
sample_size = integer(0),
SE_AUB = integer(0),
SE_A_e = integer(0),
SE_B_given_A_e  = integer(0),
SE_A_int_B_e = integer(0),
SE_B_e = integer(0),
SE_A_given_B_e = integer(0),
SE_B_given_not_A_e = integer(0),
SE_A_ne = integer(0),
SE_B_given_A_ne = integer(0),
SE_A_int_B_ne = integer(0),
SE_B_ne = integer(0),
SE_A_given_B_ne = integer(0),
SE_B_given_not_A_ne = integer(0),
SP_A_e = integer(0),
SP_B_e = integer(0),
SP_A_ne = integer(0),
SP_B_ne = integer(0))
for (h in prop_exp_list) {
for (w in pi_ne_list) {
for (t in risk_list) {
for (k in SE_exposed_list) {
for (z in sample_size_list)
start.time <- Sys.time()
combination <- c(combination, paste0(h, "_", w, "_", t, "_", k))
### setting parameters
source(paste0(thisdir,"/01_Parameters/TestParameters_hwtk.R"))
### Loading data
source(paste0(thisdir,"/03_DataGen/ConditionalProbability.R"))
### Test
source(paste0(thisdir,"/04_TestApplication/TestPower.R"))
tmp <- data.table(prop_exp = h,
prev_ne = w,
risk = t,
SE_exp = k,
power = rej_95,
sample_size = z,
SE_AUB = SE_AUB,
SE_A_e = SE_A_e,
SE_B_given_A_e  = SE_B_given_A_e,
SE_A_int_B_e = SE_A_int_B_e,
SE_B_e = SE_B_e,
SE_A_given_B_e = SE_A_given_B_e ,
SE_B_given_not_A_e = SE_B_given_not_A_e,
SE_A_ne = SE_A_ne,
SE_B_given_A_ne = SE_B_given_A_ne,
SE_A_int_B_ne = SE_A_int_B_ne,
SE_B_ne = SE_B_ne,
SE_A_given_B_ne = SE_A_given_B_ne,
SE_B_given_not_A_ne = SE_B_given_not_A_ne,
SP_A_e = SP_A_e,
SP_B_e = SP_B_e,
SP_A_ne = SP_A_ne,
SP_B_ne = SP_B_ne)
DT_comb <- rbind(DT_comb, tmp)
TestPower <- c(TestPower, rej_95)
end.time <- Sys.time()
time.taken <- c(time.taken, (end.time - start.time))
counter <- counter + 1
print(paste0(counter, "/" , len))
}
}
}
}
fwrite(DT_comb, paste0(thisdir, "/05_Results/DT_comb.csv"))
48*7
sample_size_list
SE_exposed_list
risk_list
pi_ne_list
prop_exp_list
fwrite(DT_comb, paste0(thisdir, "/05_Results/DT_comb_sample_250.csv"))
View(DT_comb)
z
View(DT_comb)
fwrite(DT_comb, paste0(thisdir, "/05_Results/DT_comb_sample_500.csv"))
rm(list=ls(all.names=TRUE))
### Setting the working directory
if (!require("rstudioapi")) install.packages("rstudioapi")
thisdir<-setwd(dirname(rstudioapi::getSourceEditorContext()$path))
thisdir<-setwd(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(thisdir)
### Loading parameters
source(paste0(thisdir,"/01_Parameters/ProgramParameters.R"))
### Loading test statistic
source(paste0(thisdir,"/02_TestStatistic/TestStatistic.R"))
################################################################################
###################                Simulation                ###################
################################################################################
prop_exp_list    <- c(0.01, 0.1)
pi_ne_list       <- c(0.01, 0.05, 0.1)
risk_list        <- c(0.5, 0.9, 1.1, 2)
SE_exposed_list  <- c(0.15, 0.30, 0.40, 0.50, 0.60, 0.70, 0.85)
sample_size_list <- c(250)#, 500)
counter <- 0
len <- length(prop_exp_list)*
length(pi_ne_list)*
length(risk_list)*
length(SE_exposed_list)*
length(sample_size_list)
TestPower <- c()
combination <- c()
time.taken <- c()
DT_comb <- data.table(prop_exp = integer(0),
prev_ne = integer(0),
risk = integer(0),
SE_exp = integer(0),
power = integer(0),
sample_size = integer(0),
SE_AUB = integer(0),
SE_A_e = integer(0),
SE_B_given_A_e  = integer(0),
SE_A_int_B_e = integer(0),
SE_B_e = integer(0),
SE_A_given_B_e = integer(0),
SE_B_given_not_A_e = integer(0),
SE_A_ne = integer(0),
SE_B_given_A_ne = integer(0),
SE_A_int_B_ne = integer(0),
SE_B_ne = integer(0),
SE_A_given_B_ne = integer(0),
SE_B_given_not_A_ne = integer(0),
SP_A_e = integer(0),
SP_B_e = integer(0),
SP_A_ne = integer(0),
SP_B_ne = integer(0))
for (h in prop_exp_list) {
for (w in pi_ne_list) {
for (t in risk_list) {
for (k in SE_exposed_list) {
for (z in sample_size_list){
start.time <- Sys.time()
combination <- c(combination, paste0(h, "_", w, "_", t, "_", k))
### setting parameters
source(paste0(thisdir,"/01_Parameters/TestParameters_hwtk.R"))
### Loading data
source(paste0(thisdir,"/03_DataGen/ConditionalProbability.R"))
### Test
source(paste0(thisdir,"/04_TestApplication/TestPower.R"))
tmp <- data.table(prop_exp = h,
prev_ne = w,
risk = t,
SE_exp = k,
power = rej_95,
sample_size = z,
SE_AUB = SE_AUB,
SE_A_e = SE_A_e,
SE_B_given_A_e  = SE_B_given_A_e,
SE_A_int_B_e = SE_A_int_B_e,
SE_B_e = SE_B_e,
SE_A_given_B_e = SE_A_given_B_e ,
SE_B_given_not_A_e = SE_B_given_not_A_e,
SE_A_ne = SE_A_ne,
SE_B_given_A_ne = SE_B_given_A_ne,
SE_A_int_B_ne = SE_A_int_B_ne,
SE_B_ne = SE_B_ne,
SE_A_given_B_ne = SE_A_given_B_ne,
SE_B_given_not_A_ne = SE_B_given_not_A_ne,
SP_A_e = SP_A_e,
SP_B_e = SP_B_e,
SP_A_ne = SP_A_ne,
SP_B_ne = SP_B_ne)
DT_comb <- rbind(DT_comb, tmp)
TestPower <- c(TestPower, rej_95)
end.time <- Sys.time()
time.taken <- c(time.taken, (end.time - start.time))
counter <- counter + 1
print(paste0(counter, "/" , len))
}
}
}
}
}
fwrite(DT_comb, paste0(thisdir, "/05_Results/DT_comb_sample_250.csv"))
rm(list=ls(all.names=TRUE))
### Setting the working directory
if (!require("rstudioapi")) install.packages("rstudioapi")
thisdir<-setwd(dirname(rstudioapi::getSourceEditorContext()$path))
thisdir<-setwd(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(thisdir)
### Loading parameters
source(paste0(thisdir,"/01_Parameters/ProgramParameters.R"))
### Loading test statistic
source(paste0(thisdir,"/02_TestStatistic/TestStatistic.R"))
################################################################################
###################                Simulation                ###################
################################################################################
prop_exp_list    <- c(0.01, 0.1)
pi_ne_list       <- c(0.01, 0.05, 0.1)
risk_list        <- c(0.5, 0.9, 1.1, 2)
SE_exposed_list  <- c(0.15, 0.30, 0.40, 0.50, 0.60, 0.70, 0.85)
sample_size_list <- c(250)#, 500)
counter <- 0
len <- length(prop_exp_list)*
length(pi_ne_list)*
length(risk_list)*
length(SE_exposed_list)*
length(sample_size_list)
TestPower <- c()
combination <- c()
time.taken <- c()
DT_comb <- data.table(prop_exp = integer(0),
prev_ne = integer(0),
risk = integer(0),
SE_exp = integer(0),
power = integer(0),
sample_size = integer(0),
SE_AUB = integer(0),
SE_A_e = integer(0),
SE_B_given_A_e  = integer(0),
SE_A_int_B_e = integer(0),
SE_B_e = integer(0),
SE_A_given_B_e = integer(0),
SE_B_given_not_A_e = integer(0),
SE_A_ne = integer(0),
SE_B_given_A_ne = integer(0),
SE_A_int_B_ne = integer(0),
SE_B_ne = integer(0),
SE_A_given_B_ne = integer(0),
SE_B_given_not_A_ne = integer(0),
SP_A_e = integer(0),
SP_B_e = integer(0),
SP_A_ne = integer(0),
SP_B_ne = integer(0))
for (h in prop_exp_list) {
for (w in pi_ne_list) {
for (t in risk_list) {
for (k in SE_exposed_list) {
for (z in sample_size_list) {
start.time <- Sys.time()
combination <- c(combination, paste0(h, "_", w, "_", t, "_", k))
### setting parameters
source(paste0(thisdir,"/01_Parameters/TestParameters_hwtk.R"))
### Loading data
source(paste0(thisdir,"/03_DataGen/ConditionalProbability.R"))
### Test
source(paste0(thisdir,"/04_TestApplication/TestPower.R"))
tmp <- data.table(prop_exp = h,
prev_ne = w,
risk = t,
SE_exp = k,
power = rej_95,
sample_size = z,
SE_AUB = SE_AUB,
SE_A_e = SE_A_e,
SE_B_given_A_e  = SE_B_given_A_e,
SE_A_int_B_e = SE_A_int_B_e,
SE_B_e = SE_B_e,
SE_A_given_B_e = SE_A_given_B_e ,
SE_B_given_not_A_e = SE_B_given_not_A_e,
SE_A_ne = SE_A_ne,
SE_B_given_A_ne = SE_B_given_A_ne,
SE_A_int_B_ne = SE_A_int_B_ne,
SE_B_ne = SE_B_ne,
SE_A_given_B_ne = SE_A_given_B_ne,
SE_B_given_not_A_ne = SE_B_given_not_A_ne,
SP_A_e = SP_A_e,
SP_B_e = SP_B_e,
SP_A_ne = SP_A_ne,
SP_B_ne = SP_B_ne)
DT_comb <- rbind(DT_comb, tmp)
TestPower <- c(TestPower, rej_95)
end.time <- Sys.time()
time.taken <- c(time.taken, (end.time - start.time))
counter <- counter + 1
print(paste0(counter, "/" , len))
}
}
}
}
}
fwrite(DT_comb, paste0(thisdir, "/05_Results/DT_comb_sample_250.csv"))
Result <- data.table(Power = TestPower, combination = combination)
fwrite(Result, paste0(thisdir, "/05_Results/first.csv"))
save.image("H:/Seafile/Mia Libreria/GitHub_Repo/NonDifferentialityTest/Rscript/05_Results/env.RData")
save.image("C:/Users/giorg/Seafile/Mia Libreria/GitHub_Repo/NonDifferentialityTest/Rscript/05_Results/env2.RData")
DT_comb_sample_250 <- fread("Rscript/05_Results/DT_comb_sample_250.csv")
DT_comb_sample_500 <- fread("Rscript/05_Results/DT_comb_sample_500.csv")
library(data.table)
DT_comb_sample_250 <- fread("Rscript/05_Results/DT_comb_sample_250.csv")
DT_comb_sample_500 <- fread("Rscript/05_Results/DT_comb_sample_500.csv")
DT_combination <- rbind(DT_comb_sample_250, DT_comb_sample_500)
View(DT_combination)
fwrite("Rscript/05_Results/DT_combination_v2.csv")
fwrite(DT_combination, "Rscript/05_Results/DT_combination_v2.csv")
shiny::runApp('Rscript/dashboard')
runApp('Rscript/dashboard')
rm(list=ls(all.names=TRUE))
### Setting the working directory
if (!require("rstudioapi")) install.packages("rstudioapi")
thisdir<-setwd(dirname(rstudioapi::getSourceEditorContext()$path))
thisdir<-setwd(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(thisdir)
### Loading parameters
source(paste0(thisdir,"/01_Parameters/ProgramParameters.R"))
### Loading test statistic
source(paste0(thisdir,"/02_TestStatistic/TestStatistic.R"))
################################################################################
###################                Simulation                ###################
################################################################################
prop_exp_list    <- c(0.01, 0.1)
pi_ne_list       <- c(0.01, 0.05, 0.1)
risk_list        <- c(0.5, 0.9, 1.1, 2)
SE_exposed_list  <- c(0.15, 0.30, 0.40, 0.50, 0.60, 0.70, 0.85)
sample_size_list <- c(250, 500)
counter <- 0
DT_sim_PPV <- data.table(PPV = integer(0) ,
algorithm = character(0),
prop_exp = integer(0) ,
pi_ne = integer(0) ,
risk = integer(0) ,
SE_exposed = integer(0) ,
sample_size_list = integer(0) ,
combination  = integer(0))
time.taken <- c()
for (h in prop_exp_list) {
for (w in pi_ne_list) {
for (t in risk_list) {
for (k in SE_exposed_list) {
for (z in sample_size_list) {
start.time <- Sys.time()
#combination <- c(combination, paste0(h, "_", w, "_", t, "_", k))
#combi<- c(combination, paste0(h, "_", w, "_", t))
### setting parameters
source(paste0(thisdir,"/01_Parameters/TestParameters_hwtk.R"))
### Loading data
source(paste0(thisdir,"/03_DataGen/ConditionalProbability.R"))
### PPV
source(paste0(thisdir,"/06_PPV/PPV_distribution.R"))
DT_PPV <- DT_PPV[, prop_exp:= h]
DT_PPV <- DT_PPV[, pi_ne:= w]
DT_PPV <- DT_PPV[, risk:= t]
DT_PPV <- DT_PPV[, SE_exposed:= k]
DT_PPV <- DT_PPV[, sample_size := z]
#DT_PPV <- DT_PPV[, combination:= paste0(h, "_", w, "_", t, "_", k)]
DT_PPV <- DT_PPV[, combination:= paste0(h, "_", w, "_", t)]
DT_sim_PPV <- rbind(DT_sim_PPV, DT_PPV)
end.time <- Sys.time()
time.taken <- c(time.taken, (end.time - start.time))
counter <- counter + 1
print(counter)
}
}
}
}
}
fwrite(DT_sim_PPV, paste0(thisdir, "/05_Results/DT_sim_PPV_v2.csv"))
DT_sim_PPV
DT_PPV
rm(list=ls(all.names=TRUE))
### Setting the working directory
if (!require("rstudioapi")) install.packages("rstudioapi")
thisdir<-setwd(dirname(rstudioapi::getSourceEditorContext()$path))
thisdir<-setwd(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(thisdir)
### Loading parameters
source(paste0(thisdir,"/01_Parameters/ProgramParameters.R"))
### Loading test statistic
source(paste0(thisdir,"/02_TestStatistic/TestStatistic.R"))
################################################################################
###################                Simulation                ###################
################################################################################
prop_exp_list    <- c(0.01, 0.1)
pi_ne_list       <- c(0.01, 0.05, 0.1)
risk_list        <- c(0.5, 0.9, 1.1, 2)
SE_exposed_list  <- c(0.15, 0.30, 0.40, 0.50, 0.60, 0.70, 0.85)
sample_size_list <- c(250, 500)
counter <- 0
DT_sim_PPV <- data.table(PPV = integer(0) ,
algorithm = character(0),
prop_exp = integer(0) ,
pi_ne = integer(0) ,
risk = integer(0) ,
SE_exposed = integer(0) ,
sample_size = integer(0) ,
combination  = integer(0))
time.taken <- c()
for (h in prop_exp_list) {
for (w in pi_ne_list) {
for (t in risk_list) {
for (k in SE_exposed_list) {
for (z in sample_size_list) {
start.time <- Sys.time()
#combination <- c(combination, paste0(h, "_", w, "_", t, "_", k))
#combi<- c(combination, paste0(h, "_", w, "_", t))
### setting parameters
source(paste0(thisdir,"/01_Parameters/TestParameters_hwtk.R"))
### Loading data
source(paste0(thisdir,"/03_DataGen/ConditionalProbability.R"))
### PPV
source(paste0(thisdir,"/06_PPV/PPV_distribution.R"))
DT_PPV <- DT_PPV[, prop_exp:= h]
DT_PPV <- DT_PPV[, pi_ne:= w]
DT_PPV <- DT_PPV[, risk:= t]
DT_PPV <- DT_PPV[, SE_exposed:= k]
DT_PPV <- DT_PPV[, sample_size := z]
#DT_PPV <- DT_PPV[, combination:= paste0(h, "_", w, "_", t, "_", k)]
DT_PPV <- DT_PPV[, combination:= paste0(h, "_", w, "_", t)]
DT_sim_PPV <- rbind(DT_sim_PPV, DT_PPV)
end.time <- Sys.time()
time.taken <- c(time.taken, (end.time - start.time))
counter <- counter + 1
print(counter)
}
}
}
}
}
fwrite(DT_sim_PPV, paste0(thisdir, "/05_Results/DT_sim_PPV_v2.csv"))
View(DT_PPV)
View(DT_sim_PPV)
