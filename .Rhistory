sam_orig_Ya = DT_A[sample(nrow(DT_A),na),]
sam_orig_Yb = DT_B[sample(nrow(DT_B),nb),]
sam_orig_Yc = DT_C[sample(nrow(DT_C),nc),]
for(j in 1:nboot){
sam_Ya_boot = sam_orig_Ya[sample(nrow(sam_orig_Ya), na, replace = TRUE),]
sam_Yb_boot = sam_orig_Yb[sample(nrow(sam_orig_Yb), nb, replace = TRUE),]
sam_Yc_boot = sam_orig_Yc[sample(nrow(sam_orig_Yc), nc, replace = TRUE),]
# A=1 & E=1
PPV_A_e_tmp = (sum(sam_Ya_boot$A==1 & sam_Ya_boot$Y==1 & sam_Ya_boot$E==1)) /
(sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==1))
PPV_A_e_tmp = ifelse(PPV_A_e_tmp>0 & (!is.na(PPV_A_e_tmp)) & PPV_A_e_tmp != Inf,
PPV_A_e_tmp,  1/(2*sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==1)))
# B=1 & E=1
PPV_B_e_tmp = (sum(sam_Yb_boot$B==1 & sam_Yb_boot$Y==1 & sam_Yb_boot$E==1)) /
(sum(sam_Yb_boot$B==1 &  sam_Yb_boot$E==1))
PPV_B_e_tmp = ifelse(PPV_B_e_tmp>0 & (!is.na(PPV_B_e_tmp)) & PPV_B_e_tmp != Inf,
PPV_B_e_tmp,  1/(2*sum(sam_Yb_boot$B==1 &  sam_Yb_boot$E==1)))
# C=1 & E=1
PPV_C_e_tmp = (sum(sam_Yc_boot$C==1 & sam_Yc_boot$Y==1 & sam_Yc_boot$E==0)) /
(sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0))
PPV_C_e_tmp = ifelse(PPV_C_e_tmp>0 & (!is.na(PPV_C_e_tmp)) & PPV_C_e_tmp != Inf,
PPV_C_e_tmp,  1/(2*sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0)))
# A=1 & E=0
PPV_A_ne_tmp = (sum(sam_Ya_boot$A==1 & sam_Ya_boot$Y==1 & sam_Ya_boot$E==0)) /
(sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==0))
PPV_A_ne_tmp = ifelse(PPV_A_ne_tmp>0 & (!is.na(PPV_A_ne_tmp)) & PPV_A_ne_tmp != Inf,
PPV_A_ne_tmp,  1/(2*sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==0)))
# B=1 & E=0
PPV_B_ne_tmp = (sum(sam_Yb_boot$B==1 & sam_Yb_boot$Y==1 & sam_Yb_boot$E==0)) /
(sum(sam_Yb_boot$B==1 & sam_Yb_boot$E==0))
PPV_B_ne_tmp = ifelse(PPV_B_ne_tmp>0 & (!is.na(PPV_B_ne_tmp)) & PPV_B_ne_tmp != Inf,
PPV_B_ne_tmp,  1/(2*sum(sam_Yb_boot$B==1 & sam_Yb_boot$E==0)))
# C=1 & E=0
PPV_C_ne_tmp = (sum(sam_Yc_boot$C==1 & sam_Yc_boot$Y==1 & sam_Yc_boot$E==0)) /
(sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0))
PPV_C_ne_tmp = ifelse(PPV_C_ne_tmp>0 & (!is.na(PPV_C_ne_tmp)) & PPV_C_ne_tmp != Inf,
PPV_C_ne_tmp,  1/(2*sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0)))
PPV_A_e = c(PPV_A_e, PPV_A_e_tmp)
PPV_B_e = c(PPV_B_e, PPV_B_e_tmp)
PPV_C_e = c(PPV_C_e, PPV_C_e_tmp)
PPV_A_ne = c(PPV_A_ne, PPV_A_ne_tmp)
PPV_B_ne = c(PPV_B_ne, PPV_B_ne_tmp)
PPV_C_ne = c(PPV_C_ne, PPV_C_ne_tmp)
TX_boot0 = c(TX_boot0, statistic_with_C_sample(P_A_e = P_A_e,
P_B_e = P_B_e,
P_C_e = P_C_e,
P_A_ne = P_A_ne,
P_B_ne = P_B_ne,
P_C_ne = P_C_ne,
PPV_A_e =  PPV_A_e0[j],
PPV_B_e =  PPV_B_e0[j],
PPV_C_e =  PPV_C_e0[j],
PPV_A_ne = PPV_A_ne0[j],
PPV_B_ne =  PPV_B_ne0[j],
PPV_C_ne =  PPV_C_ne0[j]))
}
lb_025 = quantile(TX_boot0,0.025)
ub_975 = quantile(TX_boot0,0.975)
DT_test <- data.table(test_statistic = TX_boot0)
plt_test <- ggplot(DT_test, aes(TX_boot0))+
geom_density(col="grey", fill="grey", alpha = 0.5)+
scale_x_continuous(breaks = c(-0.5, 0, 0.5))+
geom_vline(xintercept = c(lb_025, ub_975), col="black")+
geom_vline(xintercept = 0, col="red")+
labs(x="test statistic", y="")+
theme_minimal()
#-----------
# Bootstrap
#-----------
tx_boot = c()
RR_est = c( )
RR_single_indicator = c( )
PPV_A_e = c()
PPV_A_ne = c()
PPV_B_e = c()
PPV_B_ne = c()
PPV_C_e = c()
PPV_C_ne = c()
#set.seed(3)
sam_orig_Ya = DT_A[sample(nrow(DT_A),na),]
sam_orig_Yb = DT_B[sample(nrow(DT_B),nb),]
sam_orig_Yc = DT_C[sample(nrow(DT_C),nc),]
for(j in 1:nboot){
sam_Ya_boot = sam_orig_Ya[sample(nrow(sam_orig_Ya), na, replace = TRUE),]
sam_Yb_boot = sam_orig_Yb[sample(nrow(sam_orig_Yb), nb, replace = TRUE),]
sam_Yc_boot = sam_orig_Yc[sample(nrow(sam_orig_Yc), nc, replace = TRUE),]
# A=1 & E=1
PPV_A_e_tmp = (sum(sam_Ya_boot$A==1 & sam_Ya_boot$Y==1 & sam_Ya_boot$E==1)) /
(sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==1))
PPV_A_e_tmp = ifelse(PPV_A_e_tmp>0 & (!is.na(PPV_A_e_tmp)) & PPV_A_e_tmp != Inf,
PPV_A_e_tmp,  1/(2*sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==1)))
# B=1 & E=1
PPV_B_e_tmp = (sum(sam_Yb_boot$B==1 & sam_Yb_boot$Y==1 & sam_Yb_boot$E==1)) /
(sum(sam_Yb_boot$B==1 &  sam_Yb_boot$E==1))
PPV_B_e_tmp = ifelse(PPV_B_e_tmp>0 & (!is.na(PPV_B_e_tmp)) & PPV_B_e_tmp != Inf,
PPV_B_e_tmp,  1/(2*sum(sam_Yb_boot$B==1 &  sam_Yb_boot$E==1)))
# C=1 & E=1
PPV_C_e_tmp = (sum(sam_Yc_boot$C==1 & sam_Yc_boot$Y==1 & sam_Yc_boot$E==0)) /
(sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0))
PPV_C_e_tmp = ifelse(PPV_C_e_tmp>0 & (!is.na(PPV_C_e_tmp)) & PPV_C_e_tmp != Inf,
PPV_C_e_tmp,  1/(2*sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0)))
# A=1 & E=0
PPV_A_ne_tmp = (sum(sam_Ya_boot$A==1 & sam_Ya_boot$Y==1 & sam_Ya_boot$E==0)) /
(sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==0))
PPV_A_ne_tmp = ifelse(PPV_A_ne_tmp>0 & (!is.na(PPV_A_ne_tmp)) & PPV_A_ne_tmp != Inf,
PPV_A_ne_tmp,  1/(2*sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==0)))
# B=1 & E=0
PPV_B_ne_tmp = (sum(sam_Yb_boot$B==1 & sam_Yb_boot$Y==1 & sam_Yb_boot$E==0)) /
(sum(sam_Yb_boot$B==1 & sam_Yb_boot$E==0))
PPV_B_ne_tmp = ifelse(PPV_B_ne_tmp>0 & (!is.na(PPV_B_ne_tmp)) & PPV_B_ne_tmp != Inf,
PPV_B_ne_tmp,  1/(2*sum(sam_Yb_boot$B==1 & sam_Yb_boot$E==0)))
# C=1 & E=0
PPV_C_ne_tmp = (sum(sam_Yc_boot$C==1 & sam_Yc_boot$Y==1 & sam_Yc_boot$E==0)) /
(sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0))
PPV_C_ne_tmp = ifelse(PPV_C_ne_tmp>0 & (!is.na(PPV_C_ne_tmp)) & PPV_C_ne_tmp != Inf,
PPV_C_ne_tmp,  1/(2*sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0)))
PPV_A_e = c(PPV_A_e, PPV_A_e_tmp)
PPV_B_e = c(PPV_B_e, PPV_B_e_tmp)
PPV_C_e = c(PPV_C_e, PPV_C_e_tmp)
PPV_A_ne = c(PPV_A_ne, PPV_A_ne_tmp)
PPV_B_ne = c(PPV_B_ne, PPV_B_ne_tmp)
PPV_C_ne = c(PPV_C_ne, PPV_C_ne_tmp)
TX_boot = c(TX_boot, statistic_with_C_sample(P_A_e = P_A_e,
P_B_e = P_B_e,
P_C_e = P_C_e,
P_A_ne = P_A_ne,
P_B_ne = P_B_ne,
P_C_ne = P_C_ne,
PPV_A_e =  PPV_A_e0[j],
PPV_B_e =  PPV_B_e0[j],
PPV_C_e =  PPV_C_e0[j],
PPV_A_ne = PPV_A_ne0[j],
PPV_B_ne =  PPV_B_ne0[j],
PPV_C_ne =  PPV_C_ne0[j]))
}
lb_025 = quantile(TX_boot0,0.025)
ub_975 = quantile(TX_boot0,0.975)
DT_test <- data.table(test_statistic = TX_boot0)
plt_test <- ggplot(DT_test, aes(TX_boot0))+
geom_density(col="grey", fill="grey", alpha = 0.5)+
scale_x_continuous(breaks = c(-0.5, 0, 0.5))+
geom_vline(xintercept = c(lb_025, ub_975), col="black")+
geom_vline(xintercept = 0, col="red")+
labs(x="test statistic", y="")+
theme_minimal()
tx_boot = c()
RR_est = c( )
RR_single_indicator = c( )
PPV_A_e = c()
PPV_A_ne = c()
PPV_B_e = c()
PPV_B_ne = c()
PPV_C_e = c()
PPV_C_ne = c()
sam_orig_Ya = DT_A[sample(nrow(DT_A),na),]
sam_orig_Yb = DT_B[sample(nrow(DT_B),nb),]
j
sam_Ya_boot = sam_orig_Ya[sample(nrow(sam_orig_Ya), na, replace = TRUE),]
sam_Yb_boot = sam_orig_Yb[sample(nrow(sam_orig_Yb), nb, replace = TRUE),]
sam_Yc_boot = sam_orig_Yc[sample(nrow(sam_orig_Yc), nc, replace = TRUE),]
# A=1 & E=1
PPV_A_e_tmp = (sum(sam_Ya_boot$A==1 & sam_Ya_boot$Y==1 & sam_Ya_boot$E==1)) /
(sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==1))
PPV_A_e_tmp = ifelse(PPV_A_e_tmp>0 & (!is.na(PPV_A_e_tmp)) & PPV_A_e_tmp != Inf,
PPV_A_e_tmp,  1/(2*sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==1)))
# B=1 & E=1
PPV_B_e_tmp = (sum(sam_Yb_boot$B==1 & sam_Yb_boot$Y==1 & sam_Yb_boot$E==1)) /
(sum(sam_Yb_boot$B==1 &  sam_Yb_boot$E==1))
PPV_B_e_tmp = ifelse(PPV_B_e_tmp>0 & (!is.na(PPV_B_e_tmp)) & PPV_B_e_tmp != Inf,
PPV_B_e_tmp,  1/(2*sum(sam_Yb_boot$B==1 &  sam_Yb_boot$E==1)))
# C=1 & E=1
PPV_C_e_tmp = (sum(sam_Yc_boot$C==1 & sam_Yc_boot$Y==1 & sam_Yc_boot$E==0)) /
(sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0))
PPV_C_e_tmp = ifelse(PPV_C_e_tmp>0 & (!is.na(PPV_C_e_tmp)) & PPV_C_e_tmp != Inf,
PPV_C_e_tmp,  1/(2*sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0)))
# A=1 & E=0
PPV_A_ne_tmp = (sum(sam_Ya_boot$A==1 & sam_Ya_boot$Y==1 & sam_Ya_boot$E==0)) /
(sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==0))
PPV_A_ne_tmp = ifelse(PPV_A_ne_tmp>0 & (!is.na(PPV_A_ne_tmp)) & PPV_A_ne_tmp != Inf,
PPV_A_ne_tmp,  1/(2*sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==0)))
# B=1 & E=0
PPV_B_ne_tmp = (sum(sam_Yb_boot$B==1 & sam_Yb_boot$Y==1 & sam_Yb_boot$E==0)) /
(sum(sam_Yb_boot$B==1 & sam_Yb_boot$E==0))
PPV_B_ne_tmp = ifelse(PPV_B_ne_tmp>0 & (!is.na(PPV_B_ne_tmp)) & PPV_B_ne_tmp != Inf,
PPV_B_ne_tmp,  1/(2*sum(sam_Yb_boot$B==1 & sam_Yb_boot$E==0)))
# C=1 & E=0
PPV_C_ne_tmp = (sum(sam_Yc_boot$C==1 & sam_Yc_boot$Y==1 & sam_Yc_boot$E==0)) /
(sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0))
PPV_C_ne_tmp = ifelse(PPV_C_ne_tmp>0 & (!is.na(PPV_C_ne_tmp)) & PPV_C_ne_tmp != Inf,
PPV_C_ne_tmp,  1/(2*sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0)))
PPV_A_e = c(PPV_A_e, PPV_A_e_tmp)
PPV_B_e = c(PPV_B_e, PPV_B_e_tmp)
PPV_C_e = c(PPV_C_e, PPV_C_e_tmp)
PPV_A_ne = c(PPV_A_ne, PPV_A_ne_tmp)
PPV_B_ne = c(PPV_B_ne, PPV_B_ne_tmp)
PPV_C_ne = c(PPV_C_ne, PPV_C_ne_tmp)
TX_boot = c(TX_boot, statistic_with_C_sample(P_A_e = P_A_e,
P_B_e = P_B_e,
P_C_e = P_C_e,
P_A_ne = P_A_ne,
P_B_ne = P_B_ne,
P_C_ne = P_C_ne,
PPV_A_e =  PPV_A_e0[j],
PPV_B_e =  PPV_B_e0[j],
PPV_C_e =  PPV_C_e0[j],
PPV_A_ne = PPV_A_ne0[j],
PPV_B_ne =  PPV_B_ne0[j],
PPV_C_ne =  PPV_C_ne0[j]))
TX_boot = c(TX_boot, statistic_with_C_sample(P_A_e = P_A_e,
P_B_e = P_B_e,
P_C_e = P_C_e,
P_A_ne = P_A_ne,
P_B_ne = P_B_ne,
P_C_ne = P_C_ne,
PPV_A_e =  PPV_A_e0[j],
PPV_B_e =  PPV_B_e0[j],
PPV_C_e =  PPV_C_e0[j],
PPV_A_ne = PPV_A_ne0[j],
PPV_B_ne =  PPV_B_ne0[j],
PPV_C_ne =  PPV_C_ne0[j]))
TX_boot = c(TX_boot, statistic_with_C_sample(P_A_e = P_A_e,
P_B_e = P_B_e,
P_C_e = P_C_e,
P_A_ne = P_A_ne,
P_B_ne = P_B_ne,
P_C_ne = P_C_ne,
PPV_A_e =  PPV_A_e0[j],
PPV_B_e =  PPV_B_e0[j],
PPV_C_e =  PPV_C_e0[j],
PPV_A_ne = PPV_A_ne0[j],
PPV_B_ne =  PPV_B_ne0[j],
PPV_C_ne =  PPV_C_ne0[j]))
TX_boot = c()
TX_boot = c(TX_boot, statistic_with_C_sample(P_A_e = P_A_e,
P_B_e = P_B_e,
P_C_e = P_C_e,
P_A_ne = P_A_ne,
P_B_ne = P_B_ne,
P_C_ne = P_C_ne,
PPV_A_e =  PPV_A_e0[j],
PPV_B_e =  PPV_B_e0[j],
PPV_C_e =  PPV_C_e0[j],
PPV_A_ne = PPV_A_ne0[j],
PPV_B_ne =  PPV_B_ne0[j],
PPV_C_ne =  PPV_C_ne0[j]))
TX_boot = c(TX_boot, statistic_with_C_sample(P_A_e = P_A_e,
P_B_e = P_B_e,
P_C_e = P_C_e,
P_A_ne = P_A_ne,
P_B_ne = P_B_ne,
P_C_ne = P_C_ne,
PPV_A_e =  PPV_A_e[j],
PPV_B_e =  PPV_B_e[j],
PPV_C_e =  PPV_C_e[j],
PPV_A_ne = PPV_A_ne[j],
PPV_B_ne =  PPV_B_ne[j],
PPV_C_ne =  PPV_C_ne[j]))
TX_boot
lb_025 = quantile(TX_boot0,0.025)
lb_025 = quantile(TX_boot,0.025)
ub_975 = quantile(TX_boot,0.975)
DT_test <- data.table(test_statistic = TX_boot)
plt_test <- ggplot(DT_test, aes(TX_boot))+
geom_density(col="grey", fill="grey", alpha = 0.5)+
scale_x_continuous(breaks = c(-0.5, 0, 0.5))+
geom_vline(xintercept = c(lb_025, ub_975), col="black")+
geom_vline(xintercept = 0, col="red")+
labs(x="test statistic", y="")+
theme_minimal()
plt_test
#-----------
# Bootstrap
#-----------
TX_boot = c()
RR_est = c( )
RR_single_indicator = c( )
PPV_A_e = c()
PPV_A_ne = c()
PPV_B_e = c()
PPV_B_ne = c()
PPV_C_e = c()
PPV_C_ne = c()
#set.seed(3)
sam_orig_Ya = DT_A[sample(nrow(DT_A),na),]
sam_orig_Yb = DT_B[sample(nrow(DT_B),nb),]
sam_orig_Yc = DT_C[sample(nrow(DT_C),nc),]
for(j in 1:nboot){
sam_Ya_boot = sam_orig_Ya[sample(nrow(sam_orig_Ya), na, replace = TRUE),]
sam_Yb_boot = sam_orig_Yb[sample(nrow(sam_orig_Yb), nb, replace = TRUE),]
sam_Yc_boot = sam_orig_Yc[sample(nrow(sam_orig_Yc), nc, replace = TRUE),]
# A=1 & E=1
PPV_A_e_tmp = (sum(sam_Ya_boot$A==1 & sam_Ya_boot$Y==1 & sam_Ya_boot$E==1)) /
(sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==1))
PPV_A_e_tmp = ifelse(PPV_A_e_tmp>0 & (!is.na(PPV_A_e_tmp)) & PPV_A_e_tmp != Inf,
PPV_A_e_tmp,  1/(2*sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==1)))
# B=1 & E=1
PPV_B_e_tmp = (sum(sam_Yb_boot$B==1 & sam_Yb_boot$Y==1 & sam_Yb_boot$E==1)) /
(sum(sam_Yb_boot$B==1 &  sam_Yb_boot$E==1))
PPV_B_e_tmp = ifelse(PPV_B_e_tmp>0 & (!is.na(PPV_B_e_tmp)) & PPV_B_e_tmp != Inf,
PPV_B_e_tmp,  1/(2*sum(sam_Yb_boot$B==1 &  sam_Yb_boot$E==1)))
# C=1 & E=1
PPV_C_e_tmp = (sum(sam_Yc_boot$C==1 & sam_Yc_boot$Y==1 & sam_Yc_boot$E==0)) /
(sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0))
PPV_C_e_tmp = ifelse(PPV_C_e_tmp>0 & (!is.na(PPV_C_e_tmp)) & PPV_C_e_tmp != Inf,
PPV_C_e_tmp,  1/(2*sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0)))
# A=1 & E=0
PPV_A_ne_tmp = (sum(sam_Ya_boot$A==1 & sam_Ya_boot$Y==1 & sam_Ya_boot$E==0)) /
(sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==0))
PPV_A_ne_tmp = ifelse(PPV_A_ne_tmp>0 & (!is.na(PPV_A_ne_tmp)) & PPV_A_ne_tmp != Inf,
PPV_A_ne_tmp,  1/(2*sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==0)))
# B=1 & E=0
PPV_B_ne_tmp = (sum(sam_Yb_boot$B==1 & sam_Yb_boot$Y==1 & sam_Yb_boot$E==0)) /
(sum(sam_Yb_boot$B==1 & sam_Yb_boot$E==0))
PPV_B_ne_tmp = ifelse(PPV_B_ne_tmp>0 & (!is.na(PPV_B_ne_tmp)) & PPV_B_ne_tmp != Inf,
PPV_B_ne_tmp,  1/(2*sum(sam_Yb_boot$B==1 & sam_Yb_boot$E==0)))
# C=1 & E=0
PPV_C_ne_tmp = (sum(sam_Yc_boot$C==1 & sam_Yc_boot$Y==1 & sam_Yc_boot$E==0)) /
(sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0))
PPV_C_ne_tmp = ifelse(PPV_C_ne_tmp>0 & (!is.na(PPV_C_ne_tmp)) & PPV_C_ne_tmp != Inf,
PPV_C_ne_tmp,  1/(2*sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0)))
PPV_A_e = c(PPV_A_e, PPV_A_e_tmp)
PPV_B_e = c(PPV_B_e, PPV_B_e_tmp)
PPV_C_e = c(PPV_C_e, PPV_C_e_tmp)
PPV_A_ne = c(PPV_A_ne, PPV_A_ne_tmp)
PPV_B_ne = c(PPV_B_ne, PPV_B_ne_tmp)
PPV_C_ne = c(PPV_C_ne, PPV_C_ne_tmp)
TX_boot = c(TX_boot, statistic_with_C_sample(P_A_e = P_A_e,
P_B_e = P_B_e,
P_C_e = P_C_e,
P_A_ne = P_A_ne,
P_B_ne = P_B_ne,
P_C_ne = P_C_ne,
PPV_A_e =  PPV_A_e[j],
PPV_B_e =  PPV_B_e[j],
PPV_C_e =  PPV_C_e[j],
PPV_A_ne = PPV_A_ne[j],
PPV_B_ne =  PPV_B_ne[j],
PPV_C_ne =  PPV_C_ne[j]))
}
lb_025 = quantile(TX_boot,0.025)
ub_975 = quantile(TX_boot,0.975)
DT_test <- data.table(test_statistic = TX_boot)
plt_test <- ggplot(DT_test, aes(TX_boot))+
geom_density(col="grey", fill="grey", alpha = 0.5)+
scale_x_continuous(breaks = c(-0.5, 0, 0.5))+
geom_vline(xintercept = c(lb_025, ub_975), col="black")+
geom_vline(xintercept = 0, col="red")+
labs(x="test statistic", y="")+
theme_minimal()
plt_test
#-----------
# Bootstrap
#-----------
TX_boot = c()
RR_est = c( )
RR_single_indicator = c( )
PPV_A_e = c()
PPV_A_ne = c()
PPV_B_e = c()
PPV_B_ne = c()
PPV_C_e = c()
PPV_C_ne = c()
#set.seed(3)
sam_orig_Ya = DT_A[sample(nrow(DT_A),na),]
sam_orig_Yb = DT_B[sample(nrow(DT_B),nb),]
sam_orig_Yc = DT_C[sample(nrow(DT_C),nc),]
for(j in 1:nboot){
sam_Ya_boot = sam_orig_Ya[sample(nrow(sam_orig_Ya), na, replace = TRUE),]
sam_Yb_boot = sam_orig_Yb[sample(nrow(sam_orig_Yb), nb, replace = TRUE),]
sam_Yc_boot = sam_orig_Yc[sample(nrow(sam_orig_Yc), nc, replace = TRUE),]
# A=1 & E=1
PPV_A_e_tmp = (sum(sam_Ya_boot$A==1 & sam_Ya_boot$Y==1 & sam_Ya_boot$E==1)) /
(sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==1))
PPV_A_e_tmp = ifelse(PPV_A_e_tmp>0 & (!is.na(PPV_A_e_tmp)) & PPV_A_e_tmp != Inf,
PPV_A_e_tmp,  1/(2*sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==1)))
# B=1 & E=1
PPV_B_e_tmp = (sum(sam_Yb_boot$B==1 & sam_Yb_boot$Y==1 & sam_Yb_boot$E==1)) /
(sum(sam_Yb_boot$B==1 &  sam_Yb_boot$E==1))
PPV_B_e_tmp = ifelse(PPV_B_e_tmp>0 & (!is.na(PPV_B_e_tmp)) & PPV_B_e_tmp != Inf,
PPV_B_e_tmp,  1/(2*sum(sam_Yb_boot$B==1 &  sam_Yb_boot$E==1)))
# C=1 & E=1
PPV_C_e_tmp = (sum(sam_Yc_boot$C==1 & sam_Yc_boot$Y==1 & sam_Yc_boot$E==0)) /
(sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0))
PPV_C_e_tmp = ifelse(PPV_C_e_tmp>0 & (!is.na(PPV_C_e_tmp)) & PPV_C_e_tmp != Inf,
PPV_C_e_tmp,  1/(2*sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0)))
# A=1 & E=0
PPV_A_ne_tmp = (sum(sam_Ya_boot$A==1 & sam_Ya_boot$Y==1 & sam_Ya_boot$E==0)) /
(sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==0))
PPV_A_ne_tmp = ifelse(PPV_A_ne_tmp>0 & (!is.na(PPV_A_ne_tmp)) & PPV_A_ne_tmp != Inf,
PPV_A_ne_tmp,  1/(2*sum(sam_Ya_boot$A==1 & sam_Ya_boot$E==0)))
# B=1 & E=0
PPV_B_ne_tmp = (sum(sam_Yb_boot$B==1 & sam_Yb_boot$Y==1 & sam_Yb_boot$E==0)) /
(sum(sam_Yb_boot$B==1 & sam_Yb_boot$E==0))
PPV_B_ne_tmp = ifelse(PPV_B_ne_tmp>0 & (!is.na(PPV_B_ne_tmp)) & PPV_B_ne_tmp != Inf,
PPV_B_ne_tmp,  1/(2*sum(sam_Yb_boot$B==1 & sam_Yb_boot$E==0)))
# C=1 & E=0
PPV_C_ne_tmp = (sum(sam_Yc_boot$C==1 & sam_Yc_boot$Y==1 & sam_Yc_boot$E==0)) /
(sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0))
PPV_C_ne_tmp = ifelse(PPV_C_ne_tmp>0 & (!is.na(PPV_C_ne_tmp)) & PPV_C_ne_tmp != Inf,
PPV_C_ne_tmp,  1/(2*sum(sam_Yc_boot$C==1 & sam_Yc_boot$E==0)))
PPV_A_e = c(PPV_A_e, PPV_A_e_tmp)
PPV_B_e = c(PPV_B_e, PPV_B_e_tmp)
PPV_C_e = c(PPV_C_e, PPV_C_e_tmp)
PPV_A_ne = c(PPV_A_ne, PPV_A_ne_tmp)
PPV_B_ne = c(PPV_B_ne, PPV_B_ne_tmp)
PPV_C_ne = c(PPV_C_ne, PPV_C_ne_tmp)
TX_boot = c(TX_boot, statistic_with_C_sample(P_A_e = P_A_e,
P_B_e = P_B_e,
P_C_e = P_C_e,
P_A_ne = P_A_ne,
P_B_ne = P_B_ne,
P_C_ne = P_C_ne,
PPV_A_e =  PPV_A_e[j],
PPV_B_e =  PPV_B_e[j],
PPV_C_e =  PPV_C_e[j],
PPV_A_ne = PPV_A_ne[j],
PPV_B_ne =  PPV_B_ne[j],
PPV_C_ne =  PPV_C_ne[j]))
}
lb_025 = quantile(TX_boot,0.025)
ub_975 = quantile(TX_boot,0.975)
DT_test <- data.table(test_statistic = TX_boot)
plt_test <- ggplot(DT_test, aes(TX_boot))+
geom_density(col="grey", fill="grey", alpha = 0.5)+
scale_x_continuous(breaks = c(-0.5, 0, 0.5))+
geom_vline(xintercept = c(lb_025, ub_975), col="black")+
geom_vline(xintercept = 0, col="red")+
labs(x="test statistic", y="")+
theme_minimal()
plt_test
rm(list=ls(all.names=TRUE))
### Setting the working directory
if (!require("rstudioapi")) install.packages("rstudioapi")
thisdir<-setwd(dirname(rstudioapi::getSourceEditorContext()$path))
thisdir<-setwd(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(thisdir)
### Loading program parameters
source(paste0(thisdir,"/01_Parameters/ProgramParameters.R"))
### Setting study parameters
source(paste0(thisdir,"/01_Parameters/TestParameters_scenario_ND.R"))
### Loading test functions
source(paste0(thisdir,"/02_TestFunctions/TestStatistic.R"))
source(paste0(thisdir,"/02_TestFunctions/RiskRatio_estimator.R"))
### Generating data
source(paste0(thisdir,"/03_DataGen/ConditionalProbability_sample_strata_exp.R"))
#set.seed(11)
#-----------------
# RR distribution
#-----------------
source(paste0(thisdir,"/07_RR/RiskRatio_MC_distribution_with_C_sample_exp.R"))
#multiple indicator
plt_RR
mean(RR_est)
sqrt(var(RR_est))
#single indicator
plt_RR_single_indicator
mean(RR_single_indicator)
sqrt(var(RR_single_indicator))
#ggsave(paste0(thisdir, "/09_Figures/RR_scenario1.png"))
#--------------------------
# Non Differentiality test
#--------------------------
### Bootstrap single test
source(paste0(thisdir,"/04_TestApplication/BootTest_with_C_sample_exp.R"))
plt_test
#ggsave(paste0(thisdir, "/09_Figures/Test_scenario1.png"))
### Test Power
source(paste0(thisdir,"/04_TestApplication/TestPower_with_C_sample_parlapply_exp.R.R"))
test_power
### Test Power
source(paste0(thisdir,"/04_TestApplication/TestPower_with_C_sample_parlapply_exp.R"))
test_power
power_of_test
rm(list=ls(all.names=TRUE))
### Setting the working directory
if (!require("rstudioapi")) install.packages("rstudioapi")
thisdir<-setwd(dirname(rstudioapi::getSourceEditorContext()$path))
thisdir<-setwd(dirname(rstudioapi::getSourceEditorContext()$path))
setwd(thisdir)
### Loading program parameters
source(paste0(thisdir,"/01_Parameters/ProgramParameters.R"))
### Setting study parameters
source(paste0(thisdir,"/01_Parameters/TestParameters_scenario_ND.R"))
### Loading test functions
source(paste0(thisdir,"/02_TestFunctions/TestStatistic.R"))
source(paste0(thisdir,"/02_TestFunctions/RiskRatio_estimator.R"))
### Generating data
source(paste0(thisdir,"/03_DataGen/ConditionalProbability_sample_strata_exp.R"))
#set.seed(11)
#-----------------
# RR distribution
#-----------------
source(paste0(thisdir,"/07_RR/RiskRatio_MC_distribution_with_C_sample_exp.R"))
#multiple indicator
plt_RR
mean(RR_est)
sqrt(var(RR_est))
#single indicator
plt_RR_single_indicator
mean(RR_single_indicator)
sqrt(var(RR_single_indicator))
#ggsave(paste0(thisdir, "/09_Figures/RR_scenario1.png"))
#--------------------------
# Non Differentiality test
#--------------------------
### Bootstrap single test
source(paste0(thisdir,"/04_TestApplication/BootTest_with_C_sample_exp.R"))
plt_test
#ggsave(paste0(thisdir, "/09_Figures/Test_scenario1.png"))
### Test Power
source(paste0(thisdir,"/04_TestApplication/TestPower_with_C_sample_parlapply_exp.R"))
power_of_test
